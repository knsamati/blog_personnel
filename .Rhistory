carte['PREFECTURE'] = carte['PREFECTURE'].str.replace("-","_")
carte['PREFECTURE'] = carte['PREFECTURE'].str.replace(r"S/p_M\x93","MO",regex=True)
carte['PREFECTURE'] = carte['PREFECTURE'].str.upper()
df['PREFECTURE'] = df['PREFECTURE'].str.upper()
df['PREFECTURE'].unique()
dt = df.groupby('PREFECTURE').sum().reset_index()
dt['Tx_redoublement'] = (dt['red_G_AN2'].add(dt['red_F_AN2']))/(dt['Effectif_F_AN1'].add(dt['Effectif_G_AN1']))
ecole = gpd.GeoDataFrame(df, geometry=gpd.points_from_xy(df.long,df.lat))
ecole.crs = {'init': 'epsg:4326'}
ax = carte.plot(figsize=(8,8), color='whitesmoke', linestyle=':',edgecolor = 'black')
ecole.to_crs(epsg=32630).plot(markersize=1, ax=ax)
df.dtypes
df['lat']=df.lat.astype(float)
df['long']=df.long.astype(float)
ecole = gpd.GeoDataFrame(df, geometry=gpd.points_from_xy(df.long,df.lat))
ecole.crs = {'init': 'epsg:4326'}
ax = carte.plot(figsize=(8,8), color='whitesmoke', linestyle=':',edgecolor = 'black')
ecole.to_crs(epsg=32630).plot(markersize=1, ax=ax)
df['lat']=pd.to_numeric(df.lat,errors='coerce')
df = pd.read_csv(r'C:/Users/Samati/Desktop/r/geo/primaire_geo.csv',sep = ';',encoding= 'Latin-1')
carte = gpd.read_file(r'C:/Users/Samati/Desktop/r/geo/TGO_l04_2012.shp')
df['PREFECTURE'] = df['PREFECTURE'].str.replace(" ","_")
carte['PREFECTURE'] = carte['PREFECTURE'].str.replace("-","_")
carte['PREFECTURE'] = carte['PREFECTURE'].str.replace(r"S/p_M\x93","MO",regex=True)
carte['PREFECTURE'] = carte['PREFECTURE'].str.upper()
df['PREFECTURE'] = df['PREFECTURE'].str.upper()
df['PREFECTURE'].unique()
dt = df.groupby('PREFECTURE').sum().reset_index()
dt['Tx_redoublement'] = (dt['red_G_AN2'].add(dt['red_F_AN2']))/(dt['Effectif_F_AN1'].add(dt['Effectif_G_AN1']))
df['lat'] = pd.to_numeric(df.lat,errors='coerce')
df['long'] = pd.to_numeric(df.long,errors='coerce')
ecole = gpd.GeoDataFrame(df, geometry=gpd.points_from_xy(df.long,df.lat))
ecole.crs = {'init': 'epsg:4326'}
ax = carte.plot(figsize=(8,8), color='whitesmoke', linestyle=':',edgecolor = 'black')
ecole.to_crs(epsg=32630).plot(markersize=1, ax=ax)
#import chardet
df = pd.read_csv(r'C:/Users/Samati/Desktop/r/geo/primaire_geo.csv',sep = ';',encoding= 'Latin-1')
carte = gpd.read_file(r'C:/Users/Samati/Desktop/r/geo/TGO_l04_2012.shp')
df['PREFECTURE'] = df['PREFECTURE'].str.replace(" ","_")
carte['PREFECTURE'] = carte['PREFECTURE'].str.replace("-","_")
carte['PREFECTURE'] = carte['PREFECTURE'].str.replace(r"S/p_M\x93","MO",regex=True)
carte['PREFECTURE'] = carte['PREFECTURE'].str.upper()
df['PREFECTURE'] = df['PREFECTURE'].str.upper()
df['PREFECTURE'].unique()
dt = df.groupby('PREFECTURE').sum().reset_index()
dt['Tx_redoublement'] = (dt['red_G_AN2'].add(dt['red_F_AN2']))/(dt['Effectif_F_AN1'].add(dt['Effectif_G_AN1']))
df['lat'] = pd.to_numeric(df.lat,errors='coerce')
df['long'] = pd.to_numeric(df.long,errors='coerce')
ecole = gpd.GeoDataFrame(df, geometry=gpd.points_from_xy(df.long,df.lat))
ecole.crs = {'init': 'epsg:4326'}
ecole.plot()
plt.show()
ecole.columns
ecole['geometry'].head()
df = pd.read_csv(r'C:/Users/Samati/Desktop/r/geo/primaire_geo.csv',sep = ';',encoding= 'Latin-1')
carte = gpd.read_file(r'C:/Users/Samati/Desktop/r/geo/TGO_l04_2012.shp')
df['PREFECTURE'] = df['PREFECTURE'].str.replace(" ","_")
carte['PREFECTURE'] = carte['PREFECTURE'].str.replace("-","_")
carte['PREFECTURE'] = carte['PREFECTURE'].str.replace(r"S/p_M\x93","MO",regex=True)
carte['PREFECTURE'] = carte['PREFECTURE'].str.upper()
df['PREFECTURE'] = df['PREFECTURE'].str.upper()
df['PREFECTURE'].unique()
dt = df.groupby('PREFECTURE').sum().reset_index()
dt['Tx_redoublement'] = (dt['red_G_AN2'].add(dt['red_F_AN2']))/(dt['Effectif_F_AN1'].add(dt['Effectif_G_AN1']))
#df['lat'] = pd.to_numeric(df.lat,errors='coerce')
#df['long'] = pd.to_numeric(df.long,errors='coerce')
ecole = gpd.GeoDataFrame(df, geometry=gpd.points_from_xy(df.long,df.lat))
ecole.crs = {'init': 'epsg:4326'}
ecole['geometry'].head()
ecole = gpd.GeoDataFrame(df, geometry=gpd.points_from_xy(df.long,df.lat))
ecole.crs = {'init': 'epsg:4326'}
ecole.plot()
plt.show()
install.packages(c("AsioHeaders", "attachment", "backports", "bayestestR", "blogdown", "bookdown", "broom", "Cairo", "callr", "classInt", "cli", "covr", "crosstalk", "devtools", "dplyr", "DT", "effectsize", "emmeans", "expss", "flextable", "forcats", "foreach", "fs", "fst", "gdtools", "geojsonio", "GGally", "ggeffects", "ggimage", "ggplotify", "ggrepel", "glmmTMB", "glue", "golem", "gridGraphics", "gridtext", "gstat", "gt", "hexbin", "hrbrthemes", "httpcode", "igraph", "insight", "intervals", "isoband", "ISOcodes", "knitr", "leafem", "learnr", "lifecycle", "link2GI", "lme4", "lubridate", "lwgeom", "mapproj", "mapview", "matrixStats", "mlr", "mnormt", "modelr", "mongolite", "mvtnorm", "nloptr", "officer", "osmdata", "pagedown", "parallelMap", "parameters", "ParamHelpers", "performance", "plotly", "plyr", "pROC", "processx", "proj4", "protolite", "ps", "quanteda", "quantmod", "quantreg", "R.methodsS3", "ranger", "Rcpp", "RcppArmadillo", "RcppParallel", "reactR", "rematch2", "repr", "reshape2", "RgoogleMaps", "rJava", "RJSONIO", "rlang", "rmapshaper", "rmarkdown", "roxygen2", "Rttf2pt1", "rvcheck", "sass", "servr", "sf", "shiny", "shinycssloaders", "shinyWidgets", "showtext", "sjlabelled", "sjmisc", "sjPlot", "sjstats", "skimr", "SnowballC", "sp", "spacetime", "spacyr", "spatstat", "spatstat.utils", "spData", "srvyr", "stars", "stopwords", "stplanr", "survey", "svglite", "testthat", "tibble", "tidytext", "tinytex", "tmap", "tmaptools", "TMB", "units", "usethis", "uuid", "V8", "vctrs", "xaringan", "xfun", "xlsx", "xml2", "yesno"))
install.packages(c("Cairo", "devtools", "effectsize", "httpcode", "isoband", "lwgeom", "RcppArmadillo", "reshape2", "rlang", "sf", "spatstat", "spatstat.utils", "spData", "srvyr", "stars", "stopwords", "stplanr", "survey", "svglite", "testthat", "tibble", "tidytext", "tinytex", "tmap", "tmaptools", "TMB", "units", "usethis", "uuid", "V8", "vctrs", "xaringan", "xfun", "xlsx", "xml2", "yesno"))
blogdown::serve_site()
servr::daemon_stop(1)
blogdown::serve_site()
blogdown::build_site(local=FALSE)
blogdown::serve_site()
servr::daemon_stop(2)
blogdown::serve_site()
servr::daemon_stop(1)
blogdown::build_site(local=FALSE)
blogdown::serve_site()
servr::daemon_stop(1)
blogdown::serve_site()
library(data.table)
library(dtplyr)
library(dplyr)
#library(vroom)
fichier <- "C:/Users/Samati/Desktop/r/SPSS_RGPH4/population.csv"
#df <- vroom(fichier,id='file_name')
#spec(df)
#dim(df)
dt <- fread(fichier)
dt[,sexe:= as.factor(P04)]
setattr(dt$sexe,"levels",c("Masculin","Feminin"))
dt[,by=sexe,.(.N,mean(P06AGE, na.rm = T))]
library(dtplyr)
df <- lazy_dt(setDF(dt))
df %>% groupby(as.factor(P04)) %>%
summarise(Effectif = n(),
age_moy = mean(P06AGE,na.rm = TRUE))
df %>% group_by(as.factor(P04)) %>%
summarise(Effectif = n(),
age_moy = mean(P06AGE,na.rm = TRUE))
library(RSQLite)
library(DBI)
library(dplyr)
setwd("C:/Users/Samati/Desktop/r/SPSS_RGPH4")
con <- dbConnect(RSQLite::SQLite(), dbname = "census.sqlite3")
dbListTables(con)
population <- tbl(con, "population")
population %>% group_by(as.factor(P04)) %>%
summarise(Effectif = n(),
age_moy = mean(P06AGE,na.rm = TRUE))
population <- tbl(con, "population")
population %>% group_by(factor(P04)) %>%
summarise(Effectif = n(),
age_moy = mean(P06AGE,na.rm = TRUE))
population <- tbl(con, "population")
population %>% group_by(!!factor(P04)) %>%
summarise(Effectif = n(),
age_moy = mean(P06AGE,na.rm = TRUE))
population <- tbl(con, "population")
population %>% group_by(P04) %>%
summarise(Effectif = n(),
age_moy = mean(P06AGE,na.rm = TRUE))
population <- tbl(con, "population")
population %>% group_by(P04) %>%
summarise(Effectif = n(),
age_moy = mean(P06AGE,na.rm = TRUE)) %>%
show_query()
reticulate::repl_python()
import pandas as pd
import geopandas as gpd
import matplotlib.pyplot as plt
import mapclassify
#import chardet
df = pd.read_csv(r'C:/Users/Samati/Desktop/r/geo/primaire_geo.csv',sep = ';',encoding= 'Latin-1')
carte = gpd.read_file(r'C:/Users/Samati/Desktop/r/geo/TGO_l04_2012.shp')
df['PREFECTURE'] = df['PREFECTURE'].str.replace(" ","_")
carte['PREFECTURE'] = carte['PREFECTURE'].str.replace("-","_")
carte['PREFECTURE'] = carte['PREFECTURE'].str.replace(r"S/p_M\x93","MO",regex=True)
carte['PREFECTURE'] = carte['PREFECTURE'].str.upper()
df['PREFECTURE'] = df['PREFECTURE'].str.upper()
df['PREFECTURE'].unique()
dt = df.groupby('PREFECTURE').sum().reset_index()
dt['Tx_redoublement'] = (dt['red_G_AN2'].add(dt['red_F_AN2']))/(dt['Effectif_F_AN1'].add(dt['Effectif_G_AN1']))
#df['lat'] = pd.to_numeric(df.lat,errors='coerce')
#df['long'] = pd.to_numeric(df.long,errors='coerce')
ecole = gpd.GeoDataFrame(df, geometry=gpd.points_from_xy(df.long,df.lat))
ecole.crs = {'init': 'epsg:4326'}
ecole['Tx_redoublement'] = (ecole['red_G_AN2'].add(ecole['red_F_AN2']))/(ecole['Effectif_F_AN1'].add(ecole['Effectif_G_AN1']))
#ecole.plot()
#plt.show()
ecole['geometry'].head()
ax = carte.plot(figsize=(8,8), color='whitesmoke', linestyle=':',edgecolor = 'black')
ecole.plot(size=ecole.Tx_redoublement, ax=ax)
plt.show()
ax = carte.plot(figsize=(8,8), color='whitesmoke', linestyle=':',edgecolor = 'black')
ecole.plot(markersize=ecole.Tx_redoublement, ax=ax)
plt.show()
savanes_carte = carte['REGION'=='SAVANES']
savanes_ecole = carte['REGION'=='SAVANES']
savanes_carte = carte['REGION'] =='SAVANES'
savanes_ecole = ecole['REGION'] =='SAVANES'
ecole.columns
ecole.columns
savanes_carte = carte['REGION'] =='SAVANES'
savanes_ecole = ecole['DRE'] =='SAVANES'
ax = savanes_carte.plot(figsize = (8,8), color='whitesmoke', linestyle=':',edgecolor = 'black')
savanes_ecole.plot(markersize = savanes_ecole.Tx_redoublement, ax=ax)
plt.show()
savanes_carte.plot()
savanes_carte = carte.loc[REGION=='SAVANES']
savanes_carte = carte.loc[carte.REGION=='SAVANES']
savanes_carte.plot()
plt.show()
savanes_carte = carte.loc[carte.REGION =='SAVANES']
savanes_ecole = ecole.loc[ecole.DRE =='SAVANES']
ax = savanes_carte.plot(figsize = (8,8), color='whitesmoke', linestyle=':',edgecolor = 'black')
savanes_ecole.plot(markersize = savanes_ecole.Tx_redoublement, ax=ax)
plt.show()
savanes_ecole.plot()
plt.show()
savanes_ecole.head()
ecole.plot()
plt.show()
import pandas as pd
import geopandas as gpd
import matplotlib.pyplot as plt
import mapclassify
#import chardet
df = pd.read_csv(r'C:/Users/Samati/Desktop/r/geo/primaire_geo.csv',sep = ';',encoding= 'Latin-1')
carte = gpd.read_file(r'C:/Users/Samati/Desktop/r/geo/TGO_l04_2012.shp')
df['PREFECTURE'] = df['PREFECTURE'].str.replace(" ","_")
carte['PREFECTURE'] = carte['PREFECTURE'].str.replace("-","_")
carte['PREFECTURE'] = carte['PREFECTURE'].str.replace(r"S/p_M\x93","MO",regex=True)
carte['PREFECTURE'] = carte['PREFECTURE'].str.upper()
df['PREFECTURE'] = df['PREFECTURE'].str.upper()
df['PREFECTURE'].unique()
dt = df.groupby('PREFECTURE').sum().reset_index()
dt['Tx_redoublement'] = (dt['red_G_AN2'].add(dt['red_F_AN2']))/(dt['Effectif_F_AN1'].add(dt['Effectif_G_AN1']))
#df['lat'] = pd.to_numeric(df.lat,errors='coerce')
#df['long'] = pd.to_numeric(df.long,errors='coerce')
ecole = gpd.GeoDataFrame(df, geometry=gpd.points_from_xy(df.long,df.lat))
ecole.crs = {'init': 'epsg:4326'}
ecole['Tx_redoublement'] = (ecole['red_G_AN2'].add(ecole['red_F_AN2']))/(ecole['Effectif_F_AN1'].add(ecole['Effectif_G_AN1']))
savanes_carte = carte.loc[carte.REGION =='SAVANES']
savanes_ecole = ecole.loc[ecole.REGION =='SAVANES']
ax = savanes_carte.plot(figsize = (8,8), color='whitesmoke', linestyle=':',edgecolor = 'black')
savanes_ecole.plot(markersize = savanes_ecole.Tx_redoublement, ax=ax)
plt.show()
ax = savanes_carte.plot(figsize = (8,8), color='whitesmoke', linestyle=':',edgecolor = 'black')
savanes_ecole.plot(s = savanes_ecole.Tx_redoublement, ax=ax)
savanes_ecole.head()
savanes_ecole.columns
ax = savanes_carte.plot(figsize = (8,8), color='whitesmoke', linestyle=':',edgecolor = 'black')
savanes_ecole.scatter(savanes_ecole.long,savanes_ecole.lat,s = savanes_ecole.Tx_redoublement, ax=ax)
plt.show()
savanes=df.loc[df.REGION =='SAVANES']
savanes=df.loc[df.REGION =='SAVANES']
ax = savanes_carte.plot(figsize = (8,8), color='whitesmoke', linestyle=':',edgecolor = 'black')
savanes_ecole.scatter(savanes.long,savanes.lat,s = savanes_ecole.Tx_redoublement, ax=ax)
ax = savanes_carte.plot(figsize = (8,8), color='whitesmoke', linestyle=':',edgecolor = 'black')
savanes.scatter(savanes.long,savanes.lat, ax=ax)
ax = savanes_carte.plot(figsize = (8,8), color='whitesmoke', linestyle=':',edgecolor = 'black')
ax.scatter(savanes.long,savanes.lat)
plt.show()
savanes = df.loc[df.REGION =='SAVANES']
savanes['Tx_redoublement'] = (savanes['red_G_AN2']+(savanes['red_F_AN2']))/(savanes['Effectif_F_AN1']+(savanes['Effectif_G_AN1']))
ax = savanes_carte.plot(figsize = (8,8), color='whitesmoke', linestyle=':',edgecolor = 'black')
ax.scatter(savanes.long,savanes.lat,s=savanes.Tx_redoublement)
savanes = df.loc[df.REGION =='SAVANES']
savanes['Tx_redoublement'] = (savanes['red_G_AN2']+(savanes['red_F_AN2']))/(savanes['Effectif_F_AN1']+(savanes['Effectif_G_AN1']))
ax = savanes_carte.plot(figsize = (8,8), color='whitesmoke', linestyle=':',edgecolor = 'black')
ax.scatter(savanes.long,savanes.lat,s=savanes.Tx_redoublement)
savanes = df.loc[df.REGION =='SAVANES']
savanes['Tx_redoublement'] = (savanes['red_G_AN2']+(savanes['red_F_AN2']))/(savanes['Effectif_F_AN1']+(savanes['Effectif_G_AN1']))
ax = savanes_carte.plot(figsize = (8,8), color='whitesmoke', linestyle=':',edgecolor = 'black')
ax.scatter(savanes.long,savanes.lat,s=savanes.Tx_redoublement)
plt.show()
savanes = df.loc[df.REGION =='SAVANES']
savanes['Tx_redoublement'] =100*(savanes['red_G_AN2']+(savanes['red_F_AN2']))/(savanes['Effectif_F_AN1']+(savanes['Effectif_G_AN1']))
ax = savanes_carte.plot(figsize = (8,8), color='whitesmoke', linestyle=':',edgecolor = 'black')
ax.scatter(savanes.long,savanes.lat,s=savanes.Tx_redoublement)
plt.show()
devtools::install_github("xiaodaigh/disk.frame")
install.packages("Rcpp")
install.packages("Rcpp")
install.packages("Rcpp")
install.packages("disk.frame")
library(data.table)
#library(dtplyr)
library(dplyr)
#library(vroom)
fichier <- "C:/Users/Samati/Desktop/r/SPSS_RGPH4/population.csv"
#df <- vroom(fichier)
#col=spec(df)
#df <- vroom(fichier,col_types = col)
library(disk.frame)
disk_df <- csv_to_disk.frame(
fichier,
outdir = "population",
overwrite = T)
disk_df
collect(disk_df) %>% head()
disk_df %>% group_by(as.factor(P04)) %>%
summarise(Effectif = n(),
age_moy = mean(P06AGE,na.rm = TRUE)) %>%
collect()
setattr(disk_df$sexe,"levels",c("Masculin","Feminin"))
disk_df[,by=sexe,.(.N,mean(P06AGE, na.rm = T))]
disk_df[,sexe:= as.factor(P04)]
setattr(disk_df$sexe,"levels",c("Masculin","Feminin"))
disk_df[,by=sexe,.(.N,mean(P06AGE, na.rm = T))]
disk_df[,by=P04,.(.N,mean(P06AGE, na.rm = T))]
disk_df %>% group_by(P04) %>%
summarise(Effectif = n(),
age_moy = mean(P06AGE,na.rm = TRUE)) %>%
collect()
library(data.table)
#library(dtplyr)
library(dplyr)
#library(vroom)
fichier <- "C:/Users/Samati/Desktop/r/SPSS_RGPH4/population.csv"
#df <- vroom(fichier)
#col=spec(df)
#df <- vroom(fichier,col_types = col)
library(disk.frame)
options(future.globals.maxSize = Inf)
disk_df <- csv_to_disk.frame(
fichier,
outdir = "population",
overwrite = T)
disk_df %>% group_by(P04) %>%
summarise(Effectif = n(),
age_moy = mean(P06AGE,na.rm = TRUE)) %>%
collect()
collect(disk_df)[,by=sexe,.(.N,mean(P06AGE, na.rm = T))]
collect(disk_df)[,by=P04,.(.N,mean(P06AGE, na.rm = T))]
blogdown::serve_site()
blogdown::build_site(local=FALSE)
blogdown::build_site(local=FALSE)
blogdown::build_site()
blogdown::build_site(local = FALSE)
blogdown::serve_site()
import pandas as pd
import geopandas as gpd
import matplotlib.pyplot as plt
import mapclassify
#import chardet
df = pd.read_csv(r'C:/Users/Samati/Desktop/r/geo/primaire_geo.csv',sep = ';',encoding= 'Latin-1')
carte = gpd.read_file(r'C:/Users/Samati/Desktop/r/geo/TGO_l04_2012.shp')
df['PREFECTURE'] = df['PREFECTURE'].str.replace(" ","_")
carte['PREFECTURE'] = carte['PREFECTURE'].str.replace("-","_")
carte['PREFECTURE'] = carte['PREFECTURE'].str.replace(r"S/p_M\x93","MO",regex=True)
carte['PREFECTURE'] = carte['PREFECTURE'].str.upper()
df['PREFECTURE'] = df['PREFECTURE'].str.upper()
df['PREFECTURE'].unique()
dt = df.groupby('PREFECTURE').sum().reset_index()
dt['Tx_redoublement'] = (dt['red_G_AN2'].add(dt['red_F_AN2']))/(dt['Effectif_F_AN1'].add(dt['Effectif_G_AN1']))
#df['lat'] = pd.to_numeric(df.lat,errors='coerce')
#df['long'] = pd.to_numeric(df.long,errors='coerce')
ecole = gpd.GeoDataFrame(df, geometry=gpd.points_from_xy(df.long,df.lat))
ecole.crs = {'init': 'epsg:4326'}
ecole['Tx_redoublement'] = (ecole['red_G_AN2'].add(ecole['red_F_AN2']))/(ecole['Effectif_F_AN1'].add(ecole['Effectif_G_AN1']))
savanes_carte = carte.loc[carte.REGION =='SAVANES']
savanes = df.loc[df.REGION =='SAVANES']
savanes['Tx_redoublement'] =100*(savanes['red_G_AN2']+(savanes['red_F_AN2']))/(savanes['Effectif_F_AN1']+(savanes['Effectif_G_AN1']))
ax = savanes_carte.plot(figsize = (8,8), color='whitesmoke', linestyle=':',edgecolor = 'black')
ax.scatter(savanes.long,savanes.lat,s=savanes.Tx_redoublement)
reticulate::repl_python()
import pandas as pd
import geopandas as gpd
import matplotlib.pyplot as plt
import mapclassify
#import chardet
df = pd.read_csv(r'C:/Users/Samati/Desktop/r/geo/primaire_geo.csv',sep = ';',encoding= 'Latin-1')
carte = gpd.read_file(r'C:/Users/Samati/Desktop/r/geo/TGO_l04_2012.shp')
df['PREFECTURE'] = df['PREFECTURE'].str.replace(" ","_")
carte['PREFECTURE'] = carte['PREFECTURE'].str.replace("-","_")
carte['PREFECTURE'] = carte['PREFECTURE'].str.replace(r"S/p_M\x93","MO",regex=True)
carte['PREFECTURE'] = carte['PREFECTURE'].str.upper()
df['PREFECTURE'] = df['PREFECTURE'].str.upper()
df['PREFECTURE'].unique()
dt = df.groupby('PREFECTURE').sum().reset_index()
dt['Tx_redoublement'] = (dt['red_G_AN2'].add(dt['red_F_AN2']))/(dt['Effectif_F_AN1'].add(dt['Effectif_G_AN1']))
#df['lat'] = pd.to_numeric(df.lat,errors='coerce')
#df['long'] = pd.to_numeric(df.long,errors='coerce')
ecole = gpd.GeoDataFrame(df, geometry=gpd.points_from_xy(df.long,df.lat))
ecole.crs = {'init': 'epsg:4326'}
ecole['Tx_redoublement'] = (ecole['red_G_AN2'].add(ecole['red_F_AN2']))/(ecole['Effectif_F_AN1'].add(ecole['Effectif_G_AN1']))
savanes_carte = carte.loc[carte.REGION =='SAVANES']
savanes = df.loc[df.REGION =='SAVANES']
savanes['Tx_redoublement'] =100*(savanes['red_G_AN2']+(savanes['red_F_AN2']))/(savanes['Effectif_F_AN1']+(savanes['Effectif_G_AN1']))
ax = savanes_carte.plot(figsize = (8,8), color='whitesmoke', linestyle=':',edgecolor = 'black')
ax.scatter(savanes.long,savanes.lat,s=savanes.Tx_redoublement)
plt.show()
carto_sav = alt.Chart(savanes_carte).mark_geoshape(
fill='lightgray',
stroke='white'
).properties(
width=500,
height=300
)
import altair as alt
carto_sav = alt.Chart(savanes_carte).mark_geoshape(
fill='lightgray',
stroke='white'
).properties(
width=500,
height=300
)
points = alt.Chart(savanes).mark_circle().encode(
longitude='long:Q',
latitude='lat:Q',
size=alt.Size('Tx_redoublement:Q', title='Taux de redoublement'),
color=alt.value('steelblue'),
tooltip=['NOM_ETABLISSEMENT:N','Tx_redoublement:Q']
).properties(
title='Taux de redoublement par établissement'
)
carto_sav + points
plt.show()
exit()
exit
blogdown::serve_site()
servr::daemon_stop(2)
reticulate::repl_python()
import altair as alt
# US states background
carto_sav = alt.Chart(savanes_carte).mark_geoshape(
fill='lightgray',
stroke='white'
).properties(
width=500,
height=300
)
# airport positions on background
points = alt.Chart(savanes).mark_circle().encode(
longitude='long:Q',
latitude='lat:Q',
size=alt.Size('Tx_redoublement:Q', title='Taux de redoublement'),
color=alt.value('steelblue'),
tooltip=['NOM_ETABLISSEMENT:N','Tx_redoublement:Q']
).properties(
title='Taux de redoublement par établissement'
)
alt.layer(carto_sav , points)
plt.show()
import altair as alt
# US states background
carto_sav = alt.Chart(savanes_carte).mark_geoshape(
fill='lightgray',
stroke='white'
).properties(
width=500,
height=300
)
# airport positions on background
points = alt.Chart(savanes).mark_circle().encode(
longitude='long:Q',
latitude='lat:Q',
size=alt.Size('Tx_redoublement:Q', title='Taux de redoublement'),
color=alt.value('steelblue'),
tooltip=['NOM_ETABLISSEMENT:N','Tx_redoublement:Q']
).properties(
title='Taux de redoublement par établissement'
)
alt.layer(carto_sav , points)
plt.show()
blogdown::serve_site()
exit
blogdown::serve_site()
servr::daemon_stop(3)
blogdown::serve_site()
import pandas as pd
import geopandas as gpd
import matplotlib.pyplot as plt
import mapclassify
#import chardet
df = pd.read_csv(r'C:/Users/Samati/Desktop/r/geo/primaire_geo.csv',sep = ';',encoding= 'Latin-1')
carte = gpd.read_file(r'C:/Users/Samati/Desktop/r/geo/TGO_l04_2012.shp')
df['PREFECTURE'] = df['PREFECTURE'].str.replace(" ","_")
carte['PREFECTURE'] = carte['PREFECTURE'].str.replace("-","_")
carte['PREFECTURE'] = carte['PREFECTURE'].str.replace(r"S/p_M\x93","MO",regex=True)
carte['PREFECTURE'] = carte['PREFECTURE'].str.upper()
df['PREFECTURE'] = df['PREFECTURE'].str.upper()
df['PREFECTURE'].unique()
dt = df.groupby('PREFECTURE').sum().reset_index()
dt['Tx_redoublement'] = (dt['red_G_AN2'].add(dt['red_F_AN2']))/(dt['Effectif_F_AN1'].add(dt['Effectif_G_AN1']))
#df['lat'] = pd.to_numeric(df.lat,errors='coerce')
#df['long'] = pd.to_numeric(df.long,errors='coerce')
ecole = gpd.GeoDataFrame(df, geometry=gpd.points_from_xy(df.long,df.lat))
ecole.crs = {'init': 'epsg:4326'}
ecole['Tx_redoublement'] = (ecole['red_G_AN2'].add(ecole['red_F_AN2']))/(ecole['Effectif_F_AN1'].add(ecole['Effectif_G_AN1']))
savanes_carte = carte.loc[carte.REGION =='SAVANES']
savanes = df.loc[df.REGION =='SAVANES']
savanes['Tx_redoublement'] =100*(savanes['red_G_AN2']+(savanes['red_F_AN2']))/(savanes['Effectif_F_AN1']+(savanes['Effectif_G_AN1']))
ax = savanes_carte.plot(figsize = (8,8), color='whitesmoke', linestyle=':',edgecolor = 'black')
ax.scatter(savanes.long,savanes.lat,s=savanes.Tx_redoublement)
reticulate::repl_python()
import pandas as pd
import geopandas as gpd
import matplotlib.pyplot as plt
import mapclassify
#import chardet
df = pd.read_csv(r'C:/Users/Samati/Desktop/r/geo/primaire_geo.csv',sep = ';',encoding= 'Latin-1')
carte = gpd.read_file(r'C:/Users/Samati/Desktop/r/geo/TGO_l04_2012.shp')
df['PREFECTURE'] = df['PREFECTURE'].str.replace(" ","_")
carte['PREFECTURE'] = carte['PREFECTURE'].str.replace("-","_")
carte['PREFECTURE'] = carte['PREFECTURE'].str.replace(r"S/p_M\x93","MO",regex=True)
carte['PREFECTURE'] = carte['PREFECTURE'].str.upper()
df['PREFECTURE'] = df['PREFECTURE'].str.upper()
df['PREFECTURE'].unique()
dt = df.groupby('PREFECTURE').sum().reset_index()
dt['Tx_redoublement'] = (dt['red_G_AN2'].add(dt['red_F_AN2']))/(dt['Effectif_F_AN1'].add(dt['Effectif_G_AN1']))
#df['lat'] = pd.to_numeric(df.lat,errors='coerce')
#df['long'] = pd.to_numeric(df.long,errors='coerce')
ecole = gpd.GeoDataFrame(df, geometry=gpd.points_from_xy(df.long,df.lat))
ecole.crs = {'init': 'epsg:4326'}
ecole['Tx_redoublement'] = (ecole['red_G_AN2'].add(ecole['red_F_AN2']))/(ecole['Effectif_F_AN1'].add(ecole['Effectif_G_AN1']))
savanes_carte = carte.loc[carte.REGION =='SAVANES']
savanes = df.loc[df.REGION =='SAVANES']
savanes['Tx_redoublement'] =100*(savanes['red_G_AN2']+(savanes['red_F_AN2']))/(savanes['Effectif_F_AN1']+(savanes['Effectif_G_AN1']))
ax = savanes_carte.plot(figsize = (8,8), color='whitesmoke', linestyle=':',edgecolor = 'black')
ax.scatter(savanes.long,savanes.lat,s=savanes.Tx_redoublement)
savanes.info()
savanes['long'] = pd.to_numeric(savanes['long'])
savanes.info()
savanes['long'] = pd.to_numeric(savanes['long'],downcast='integer')
savanes['long'] = pd.to_numeric(savanes.loc['long'],downcast='integer')
savanes['long'] = pd.to_numeric(savanes.loc[long],downcast='integer')
savanes['long'] = pd.to_numeric(savanes.loc[savanes.long],downcast='integer')
savanes.info()
savanes['longi'] = pd.to_numeric(savanes.loc[savanes.long],downcast='integer')
exit
blogdown::build_site()
devtools::install_github("r-lib/usethis")
devtools::install_github("react-R/reactR")
install.packages("glue")
devtools::install_github("react-R/reactR")
install.packages("rlang")
install.packages("rlang")
install.packages('blogdown')
blogdown:::serve_site()
blogdown::install_hugo()
blogdown:::serve_site()
blogdown:::new_post_addin()
